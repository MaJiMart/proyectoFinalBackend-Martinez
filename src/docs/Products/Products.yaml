paths:
  /api/products/:
    get:
      summary: List products
      tags:
        - Products
      responses:
        200:
          description: Products successfully obtained from the database
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        500:
          description: Internal Server Error
    post:
      summary: Create product
      tags:
        - Products
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/requestBodies/createProduct'
      responses:
        201:
          description: Product successfully created
          content:
            aplication/json:
              schema:
                  $ref: '#/components/requestBodies/createProduct'
        400:
          description: Fields required
        500:
          description: Internal Server Error

  /api/products/{pid}:
    get:
      summary: Allows you to obtain a product by its identifier
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        200:
          description: Product successfully obtained from the database
          content:
            aplication/json:
              schema:
                  $ref: '#/components/schemas/Product'
        404:
          description: Product not found
        500:
          description: Internal Server Error
    put:
      summary: Allows modifying a product by its id
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          description: Product ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/requestBodies/updateProduct'
      responses:
        200:
          description: Product successfully updated
          content:
            aplication/json:
              schema:
                  $ref: '#/components/requestBodies/updateProduct'
        404:
          description: Product not found
        500:
          description: Internal Server Error
    delete:
      summary: Allows delete a product by its identifier
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        200:
          description: Product successfully deleted from the database
        404:
          description: Product not found
        500:
          description: Internal Server Error

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Product ID generated by mongodb
        title:
          type: string
          description: Product name.
        description:
          type: string
          description: Product description.
        code:
          type: string
          description: Product code.
        price:
          type: number
          description: Product price
        status:
          type: string
          description: Product status.
        stock:
          type: number
          description: Product stock
        category:
          type: string
          description: You can choose between Personal-care, Home, Gifts or Others
        thumbnail:
          type: Array
          description: Product image collection
        owner:
          type: string
          description: User ID

      example:
        _id: 65b8dedd0178a7db5313d443
        title: Otro de prueba integradora 3
        description: Oferta de Fido
        code: 658tyu
        price: 150
        status: active
        stock: 56
        category: Others
        thumbnail: Array (empty)
        owner: 65b395d1fe77af112e1b8786
  
  requestBodies:
    createProduct:
      type: object
      properties:
        title:
          type: string
          description: Product name.
        description:
          type: string
          description: Product description.
        code:
          type: string
          description: Product code.
        price:
          type: number
          description: Product price
        stock:
          type: number
          description: Product stock

      example:
        title: Otro de prueba
        description: Oferta de Fido
        code: 658tyu
        price: 150
        stock: 56

    updateProduct:
      type: object
      properties:
        title:
          type: string
          description: Product name.
        description:
          type: string
          description: Product description.
        code:
          type: string
          description: Product code.
        price:
          type: number
          description: Product price
        stock:
          type: number
          description: Product stock
          
      example:
        title: Otro de prueba
        description: Oferta de Fido
        code: 658tyu
        price: 150
        stock: 56